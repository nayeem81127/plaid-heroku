[{"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\index.tsx":"1","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\reportWebVitals.ts":"2","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\App.tsx":"3","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Context\\index.tsx":"4","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Components\\ProductTypes\\Items.tsx":"5","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Components\\ProductTypes\\Products.tsx":"6","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Components\\Headers\\index.tsx":"7","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\dataUtilities.ts":"8","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Components\\Endpoint\\index.tsx":"9","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Components\\ProductTypes\\ProductTypesContainer\\index.tsx":"10","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Components\\Link\\index.tsx":"11","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Components\\Error\\index.tsx":"12","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Components\\Table\\index.tsx":"13","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Components\\Table\\Identity.tsx":"14","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\index.tsx":"15","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\reportWebVitals.ts":"16","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\App.tsx":"17","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Context\\index.tsx":"18","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Components\\ProductTypes\\Items.tsx":"19","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Components\\ProductTypes\\Products.tsx":"20","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Components\\Headers\\index.tsx":"21","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\dataUtilities.ts":"22","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Components\\Endpoint\\index.tsx":"23","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Components\\ProductTypes\\ProductTypesContainer\\index.tsx":"24","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Components\\Link\\index.tsx":"25","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Components\\Error\\index.tsx":"26","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Components\\Table\\index.tsx":"27","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Components\\Table\\Identity.tsx":"28"},{"size":598,"mtime":1648651801891,"results":"29","hashOfConfig":"30"},{"size":440,"mtime":1648651801891,"results":"31","hashOfConfig":"30"},{"size":2812,"mtime":1648651801886,"results":"32","hashOfConfig":"30"},{"size":1649,"mtime":1648651801891,"results":"33","hashOfConfig":"30"},{"size":1045,"mtime":1648651801891,"results":"34","hashOfConfig":"30"},{"size":3602,"mtime":1648651801891,"results":"35","hashOfConfig":"30"},{"size":4781,"mtime":1648651801891,"results":"36","hashOfConfig":"30"},{"size":13494,"mtime":1648651801891,"results":"37","hashOfConfig":"30"},{"size":2963,"mtime":1648651801886,"results":"38","hashOfConfig":"30"},{"size":447,"mtime":1648651801891,"results":"39","hashOfConfig":"30"},{"size":2114,"mtime":1648651801891,"results":"40","hashOfConfig":"30"},{"size":2633,"mtime":1648651801891,"results":"41","hashOfConfig":"30"},{"size":1277,"mtime":1648651801891,"results":"42","hashOfConfig":"30"},{"size":1069,"mtime":1648651801891,"results":"43","hashOfConfig":"30"},{"size":598,"mtime":1648651801891,"results":"44","hashOfConfig":"45"},{"size":440,"mtime":1648651801891,"results":"46","hashOfConfig":"45"},{"size":2812,"mtime":1648651801886,"results":"47","hashOfConfig":"45"},{"size":1649,"mtime":1648651801891,"results":"48","hashOfConfig":"45"},{"size":1045,"mtime":1648651801891,"results":"49","hashOfConfig":"45"},{"size":3602,"mtime":1648651801891,"results":"50","hashOfConfig":"45"},{"size":4781,"mtime":1648651801891,"results":"51","hashOfConfig":"45"},{"size":13494,"mtime":1648651801891,"results":"52","hashOfConfig":"45"},{"size":2963,"mtime":1648651801886,"results":"53","hashOfConfig":"45"},{"size":447,"mtime":1648651801891,"results":"54","hashOfConfig":"45"},{"size":2114,"mtime":1648651801891,"results":"55","hashOfConfig":"45"},{"size":2633,"mtime":1648651801891,"results":"56","hashOfConfig":"45"},{"size":1277,"mtime":1648651801891,"results":"57","hashOfConfig":"45"},{"size":1069,"mtime":1648651801891,"results":"58","hashOfConfig":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"16fllav",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"qz7euh",{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"91"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\index.tsx",[],["118","119"],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\App.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Context\\index.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Components\\ProductTypes\\Items.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Components\\ProductTypes\\Products.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Components\\Headers\\index.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\dataUtilities.ts",["120"],"import {\r\n  AuthGetResponse,\r\n  TransactionsGetResponse,\r\n  IdentityGetResponse,\r\n  InvestmentsHoldingsGetResponse,\r\n  AccountsGetResponse,\r\n  ItemGetResponse,\r\n  InstitutionsGetByIdResponse,\r\n  LiabilitiesGetResponse,\r\n  PaymentInitiationPaymentGetResponse,\r\n  AssetReportGetResponse,\r\n  AssetReport,\r\n  TransferGetResponse,\r\n} from \"plaid/dist/api\";\r\n\r\nconst formatCurrency = (\r\n  number: number | null | undefined,\r\n  code: string | null | undefined\r\n) => {\r\n  if (number != null && number !== undefined) {\r\n    return ` ${parseFloat(number.toFixed(2)).toLocaleString(\"en\")} ${code}`;\r\n  }\r\n  return \"no data\";\r\n};\r\n\r\nexport interface Categories {\r\n  title: string;\r\n  field: string;\r\n}\r\n\r\n//interfaces for categories in each individual product\r\ninterface AuthDataItem {\r\n  routing: string;\r\n  account: string;\r\n  balance: string;\r\n  name: string;\r\n}\r\ninterface TransactionsDataItem {\r\n  amount: string;\r\n  date: string;\r\n  name: string;\r\n}\r\n\r\ninterface IdentityDataItem {\r\n  addresses: string;\r\n  phoneNumbers: string;\r\n  emails: string;\r\n  names: string;\r\n}\r\n\r\ninterface BalanceDataItem {\r\n  balance: string;\r\n  subtype: string | null;\r\n  mask: string;\r\n  name: string;\r\n}\r\n\r\ninterface InvestmentsDataItem {\r\n  mask: string;\r\n  quantity: string;\r\n  price: string;\r\n  value: string;\r\n  name: string;\r\n}\r\n\r\ninterface LiabilitiessDataItem {\r\n  amount: string;\r\n  date: string;\r\n  name: string;\r\n  type: string;\r\n}\r\n\r\ninterface PaymentDataItem {\r\n  paymentId: string;\r\n  amount: string;\r\n  status: string;\r\n  statusUpdate: string;\r\n  recipientId: string;\r\n}\r\ninterface ItemDataItem {\r\n  billed: string;\r\n  available: string;\r\n  name: string;\r\n}\r\n\r\ninterface AssetsDataItem {\r\n  account: string;\r\n  balance: string;\r\n  transactions: number;\r\n  daysAvailable: number;\r\n}\r\n\r\ninterface TransferDataItem {\r\n  transferId: string;\r\n  amount: string;\r\n  type: string;\r\n  achClass: string;\r\n  network: string;\r\n}\r\n\r\nexport interface ErrorDataItem {\r\n  error_type: string;\r\n  error_code: string;\r\n  error_message: string;\r\n  display_message: string | null;\r\n  status_code: number | null;\r\n}\r\n\r\n//all possible product data interfaces\r\nexport type DataItem =\r\n  | AuthDataItem\r\n  | TransactionsDataItem\r\n  | IdentityDataItem\r\n  | BalanceDataItem\r\n  | InvestmentsDataItem\r\n  | LiabilitiessDataItem\r\n  | ItemDataItem\r\n  | PaymentDataItem\r\n  | AssetsDataItem\r\n  | TransferDataItem;\r\n\r\nexport type Data = Array<DataItem>;\r\n\r\nexport const authCategories: Array<Categories> = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Balance\",\r\n    field: \"balance\",\r\n  },\r\n  {\r\n    title: \"Account #\",\r\n    field: \"account\",\r\n  },\r\n  {\r\n    title: \"Routing #\",\r\n    field: \"routing\",\r\n  },\r\n];\r\n\r\nexport const transactionsCategories: Array<Categories> = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Amount\",\r\n    field: \"amount\",\r\n  },\r\n  {\r\n    title: \"Date\",\r\n    field: \"date\",\r\n  },\r\n];\r\n\r\nexport const identityCategories: Array<Categories> = [\r\n  {\r\n    title: \"Names\",\r\n    field: \"names\",\r\n  },\r\n  {\r\n    title: \"Emails\",\r\n    field: \"emails\",\r\n  },\r\n  {\r\n    title: \"Phone numbers\",\r\n    field: \"phoneNumbers\",\r\n  },\r\n  {\r\n    title: \"Addresses\",\r\n    field: \"addresses\",\r\n  },\r\n];\r\n\r\nexport const balanceCategories: Array<Categories> = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Balance\",\r\n    field: \"balance\",\r\n  },\r\n  {\r\n    title: \"Subtype\",\r\n    field: \"subtype\",\r\n  },\r\n  {\r\n    title: \"Mask\",\r\n    field: \"mask\",\r\n  },\r\n];\r\n\r\nexport const investmentsCategories: Array<Categories> = [\r\n  {\r\n    title: \"Account Mask\",\r\n    field: \"mask\",\r\n  },\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Quantity\",\r\n    field: \"quantity\",\r\n  },\r\n  {\r\n    title: \"Close Price\",\r\n    field: \"price\",\r\n  },\r\n  {\r\n    title: \"Value\",\r\n    field: \"value\",\r\n  },\r\n];\r\n\r\nexport const liabilitiesCategories: Array<Categories> = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Type\",\r\n    field: \"type\",\r\n  },\r\n  {\r\n    title: \"Last Payment Date\",\r\n    field: \"date\",\r\n  },\r\n  {\r\n    title: \"Last Payment Amount\",\r\n    field: \"amount\",\r\n  },\r\n];\r\n\r\nexport const itemCategories: Array<Categories> = [\r\n  {\r\n    title: \"Institution Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Billed Products\",\r\n    field: \"billed\",\r\n  },\r\n  {\r\n    title: \"Available Products\",\r\n    field: \"available\",\r\n  },\r\n];\r\n\r\nexport const accountsCategories: Array<Categories> = [\r\n  {\r\n    title: \"Name\",\r\n    field: \"name\",\r\n  },\r\n  {\r\n    title: \"Balance\",\r\n    field: \"balance\",\r\n  },\r\n  {\r\n    title: \"Subtype\",\r\n    field: \"subtype\",\r\n  },\r\n  {\r\n    title: \"Mask\",\r\n    field: \"mask\",\r\n  },\r\n];\r\n\r\nexport const paymentCategories: Array<Categories> = [\r\n  {\r\n    title: \"Payment ID\",\r\n    field: \"paymentId\",\r\n  },\r\n  {\r\n    title: \"Amount\",\r\n    field: \"amount\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n  },\r\n  {\r\n    title: \"Status Update\",\r\n    field: \"statusUpdate\",\r\n  },\r\n  {\r\n    title: \"Recipient ID\",\r\n    field: \"recipientId\",\r\n  },\r\n];\r\n\r\nexport const assetsCategories: Array<Categories> = [\r\n  {\r\n    title: \"Account\",\r\n    field: \"account\",\r\n  },\r\n  {\r\n    title: \"Transactions\",\r\n    field: \"transactions\",\r\n  },\r\n  {\r\n    title: \"Balance\",\r\n    field: \"balance\",\r\n  },\r\n  {\r\n    title: \"Days Available\",\r\n    field: \"daysAvailable\",\r\n  },\r\n];\r\n\r\nexport const transferCategories: Array<Categories> = [\r\n  {\r\n    title: \"Transfer ID\",\r\n    field: \"transferId\",\r\n  },\r\n  {\r\n    title: \"Amount\",\r\n    field: \"amount\",\r\n  },\r\n  {\r\n    title: \"Type\",\r\n    field: \"type\",\r\n  },\r\n  {\r\n    title: \"ACH Class\",\r\n    field: \"achClass\",\r\n  },\r\n  {\r\n    title: \"Network\",\r\n    field: \"network\",\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    field: \"status\",\r\n  },\r\n];\r\n\r\nexport const transformAuthData = (data: AuthGetResponse) => {\r\n  return data.numbers.ach!.map((achNumbers) => {\r\n    const account = data.accounts!.filter((a) => {\r\n      return a.account_id === achNumbers.account_id;\r\n    })[0];\r\n    const balance: number | null | undefined =\r\n      account.balances.available || account.balances.current;\r\n    const obj: DataItem = {\r\n      name: account.name,\r\n      balance: formatCurrency(balance, account.balances.iso_currency_code),\r\n      account: achNumbers.account!,\r\n      routing: achNumbers.routing!,\r\n    };\r\n    return obj;\r\n  });\r\n};\r\n\r\nexport const transformTransactionsData = (\r\n  data: TransactionsGetResponse\r\n): Array<DataItem> => {\r\n  return data.transactions!.map((t) => {\r\n    const item: DataItem = {\r\n      name: t.name!,\r\n      amount: formatCurrency(t.amount!, t.iso_currency_code),\r\n      date: t.date,\r\n    };\r\n    return item;\r\n  });\r\n};\r\n\r\ninterface IdentityData {\r\n  identity: IdentityGetResponse[\"accounts\"];\r\n}\r\n\r\nexport const transformIdentityData = (data: IdentityData) => {\r\n  const final: Array<DataItem> = [];\r\n  const identityData = data.identity![0];\r\n  identityData.owners.forEach((owner) => {\r\n    const names = owner.names.map((name) => {\r\n      return name;\r\n    });\r\n    const emails = owner.emails.map((email) => {\r\n      return email.data;\r\n    });\r\n    const phones = owner.phone_numbers.map((phone) => {\r\n      return phone.data;\r\n    });\r\n    const addresses = owner.addresses.map((address) => {\r\n      return `${address.data.street} ${address.data.city}, ${address.data.region} ${address.data.postal_code}`;\r\n    });\r\n\r\n    const num = Math.max(\r\n      emails.length,\r\n      names.length,\r\n      phones.length,\r\n      addresses.length\r\n    );\r\n\r\n    for (let i = 0; i < num; i++) {\r\n      const obj = {\r\n        names: names[i] || \"\",\r\n        emails: emails[i] || \"\",\r\n        phoneNumbers: phones[i] || \"\",\r\n        addresses: addresses[i] || \"\",\r\n      };\r\n      final.push(obj);\r\n    }\r\n  });\r\n\r\n  return final;\r\n};\r\n\r\nexport const transformBalanceData = (data: AccountsGetResponse) => {\r\n  const balanceData = data.accounts;\r\n  return balanceData.map((account) => {\r\n    const balance: number | null | undefined =\r\n      account.balances.available || account.balances.current;\r\n    const obj: DataItem = {\r\n      name: account.name,\r\n      balance: formatCurrency(balance, account.balances.iso_currency_code),\r\n      subtype: account.subtype,\r\n      mask: account.mask!,\r\n    };\r\n    return obj;\r\n  });\r\n};\r\n\r\ninterface InvestmentData {\r\n  error: null;\r\n  holdings: InvestmentsHoldingsGetResponse;\r\n}\r\n\r\nexport const transformInvestmentsData = (data: InvestmentData) => {\r\n  const holdingsData = data.holdings.holdings!.sort(function (a, b) {\r\n    if (a.account_id > b.account_id) return 1;\r\n    return -1;\r\n  });\r\n  return holdingsData.map((holding) => {\r\n    const account = data.holdings.accounts!.filter(\r\n      (acc) => acc.account_id === holding.account_id\r\n    )[0];\r\n    const security = data.holdings.securities!.filter(\r\n      (sec) => sec.security_id === holding.security_id\r\n    )[0];\r\n    const value = holding.quantity * security.close_price!;\r\n\r\n    const obj: DataItem = {\r\n      mask: account.mask!,\r\n      name: security.name!,\r\n      quantity: formatCurrency(holding.quantity, \"\"),\r\n      price: formatCurrency(\r\n        security.close_price!,\r\n        account.balances.iso_currency_code\r\n      ),\r\n      value: formatCurrency(value, account.balances.iso_currency_code),\r\n    };\r\n    return obj;\r\n  });\r\n};\r\n\r\nexport const transformLiabilitiesData = (data: LiabilitiesGetResponse) => {\r\n  const liabilitiesData = data.liabilities;\r\n  const credit = liabilitiesData.credit!.map((credit) => {\r\n    const account = data.accounts.filter(\r\n      (acc) => acc.account_id === credit.account_id\r\n    )[0];\r\n    const obj: DataItem = {\r\n      name: account.name,\r\n      type: \"credit card\",\r\n      date: credit.last_payment_date ?? \"\",\r\n      amount: formatCurrency(\r\n        credit.last_payment_amount,\r\n        account.balances.iso_currency_code\r\n      ),\r\n    };\r\n    return obj;\r\n  });\r\n\r\n  const mortgages = liabilitiesData.mortgage?.map((mortgage) => {\r\n    const account = data.accounts.filter(\r\n      (acc) => acc.account_id === mortgage.account_id\r\n    )[0];\r\n    const obj: DataItem = {\r\n      name: account.name,\r\n      type: \"mortgage\",\r\n      date: mortgage.last_payment_date!,\r\n      amount: formatCurrency(\r\n        mortgage.last_payment_amount!,\r\n        account.balances.iso_currency_code\r\n      ),\r\n    };\r\n    return obj;\r\n  });\r\n\r\n  const student = liabilitiesData.student?.map((student) => {\r\n    const account = data.accounts.filter(\r\n      (acc) => acc.account_id === student.account_id\r\n    )[0];\r\n    const obj: DataItem = {\r\n      name: account.name,\r\n      type: \"student loan\",\r\n      date: student.last_payment_date!,\r\n      amount: formatCurrency(\r\n        student.last_payment_amount!,\r\n        account.balances.iso_currency_code\r\n      ),\r\n    };\r\n    return obj;\r\n  });\r\n\r\n  return credit!.concat(mortgages!).concat(student!);\r\n};\r\n\r\nexport const transformTransferData = (data: TransferGetResponse): Array<DataItem> => {\r\n  const transferData = data.transfer;\r\n  return [\r\n    {\r\n      transferId: transferData.id,\r\n      amount: transferData.amount,\r\n      type: transferData.type,\r\n      achClass: transferData.ach_class,\r\n      network: transferData.network,\r\n      status: transferData.status,\r\n    },\r\n  ];\r\n};\r\n\r\ninterface ItemData {\r\n  item: ItemGetResponse[\"item\"];\r\n  institution: InstitutionsGetByIdResponse[\"institution\"];\r\n}\r\n\r\nexport const transformItemData = (data: ItemData): Array<DataItem> => {\r\n  return [\r\n    {\r\n      name: data.institution.name,\r\n      billed: data.item.billed_products.join(\", \"),\r\n      available: data.item.available_products.join(\", \"),\r\n    },\r\n  ];\r\n};\r\n\r\nexport const transformAccountsData = (data: AccountsGetResponse) => {\r\n  const accountsData = data.accounts;\r\n  return accountsData.map((account) => {\r\n    const balance: number | null | undefined =\r\n      account.balances.available || account.balances.current;\r\n    const obj: DataItem = {\r\n      name: account.name,\r\n      balance: formatCurrency(balance, account.balances.iso_currency_code),\r\n      subtype: account.subtype,\r\n      mask: account.mask!,\r\n    };\r\n    return obj;\r\n  });\r\n};\r\n\r\ninterface PaymentData {\r\n  payment: PaymentInitiationPaymentGetResponse;\r\n}\r\n\r\nexport const transformPaymentData = (data: PaymentData) => {\r\n  const statusUpdate =\r\n    typeof data.payment.last_status_update === \"string\"\r\n      ? data.payment.last_status_update.replace(\"T\", \" \").replace(\"Z\", \"\")\r\n      : new Date(data.payment.last_status_update * 1000) // Java data comes as timestamp\r\n          .toISOString()\r\n          .replace(\"T\", \" \")\r\n          .replace(\"Z\", \"\");\r\n  return [\r\n    {\r\n      paymentId: data.payment.payment_id,\r\n      amount: `${data.payment.amount.currency} ${data.payment.amount.value}`,\r\n      status: data.payment.status,\r\n      statusUpdate: statusUpdate,\r\n      recipientId: data.payment.recipient_id,\r\n    },\r\n  ];\r\n};\r\n\r\ninterface AssetResponseData {\r\n  json: AssetReport;\r\n}\r\n\r\nexport const transformAssetsData = (data: AssetResponseData) => {\r\n  const assetItems = data.json.items;\r\n  return assetItems.flatMap((item) => {\r\n    return item.accounts.map((account) => {\r\n      const balance: number | null | undefined =\r\n        account.balances.available || account.balances.current;\r\n      const obj: DataItem = {\r\n        account: account.name,\r\n        balance: formatCurrency(balance, account.balances.iso_currency_code),\r\n        transactions: account.transactions!.length,\r\n        daysAvailable: account.days_available!,\r\n      };\r\n      return obj;\r\n    });\r\n  });\r\n};\r\n","C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Components\\Endpoint\\index.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Components\\ProductTypes\\ProductTypesContainer\\index.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Components\\Link\\index.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Components\\Error\\index.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Components\\Table\\index.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart\\frontend\\src\\Components\\Table\\Identity.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\index.tsx",[],["121","122"],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\App.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Context\\index.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Components\\ProductTypes\\Items.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Components\\ProductTypes\\Products.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Components\\Headers\\index.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\dataUtilities.ts",["123"],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Components\\Endpoint\\index.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Components\\ProductTypes\\ProductTypesContainer\\index.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Components\\Link\\index.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Components\\Error\\index.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Components\\Table\\index.tsx",[],"C:\\Users\\shagu\\OneDrive\\Desktop\\quickstart - production\\frontend\\src\\Components\\Table\\Identity.tsx",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":11,"column":3,"nodeType":"130","messageId":"131","endLine":11,"endColumn":25},{"ruleId":"124","replacedBy":"132"},{"ruleId":"126","replacedBy":"133"},{"ruleId":"128","severity":1,"message":"129","line":11,"column":3,"nodeType":"130","messageId":"131","endLine":11,"endColumn":25},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"@typescript-eslint/no-unused-vars","'AssetReportGetResponse' is defined but never used.","Identifier","unusedVar",["134"],["135"],"no-global-assign","no-unsafe-negation"]